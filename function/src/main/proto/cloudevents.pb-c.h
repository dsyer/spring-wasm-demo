/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cloudevents.proto */

#ifndef PROTOBUF_C_cloudevents_2eproto__INCLUDED
#define PROTOBUF_C_cloudevents_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/any.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"

typedef struct Io__Cloudevents__V1__CloudEvent Io__Cloudevents__V1__CloudEvent;
typedef struct Io__Cloudevents__V1__CloudEvent__AttributesEntry Io__Cloudevents__V1__CloudEvent__AttributesEntry;
typedef struct Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue;
typedef struct Io__Cloudevents__V1__CloudEventBatch Io__Cloudevents__V1__CloudEventBatch;


/* --- enums --- */


/* --- messages --- */

struct  Io__Cloudevents__V1__CloudEvent__AttributesEntry
{
  ProtobufCMessage base;
  char *key;
  Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue *value;
};
#define IO__CLOUDEVENTS__V1__CLOUD_EVENT__ATTRIBUTES_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&io__cloudevents__v1__cloud_event__attributes_entry__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


typedef enum {
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR__NOT_SET = 0,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR_CE_BOOLEAN = 1,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR_CE_INTEGER = 2,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR_CE_STRING = 3,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR_CE_BYTES = 4,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR_CE_URI = 5,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR_CE_URI_REF = 6,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR_CE_TIMESTAMP = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR__CASE)
} Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue__AttrCase;

struct  Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue
{
  ProtobufCMessage base;
  Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue__AttrCase attr_case;
  union {
    protobuf_c_boolean ce_boolean;
    int32_t ce_integer;
    char *ce_string;
    ProtobufCBinaryData ce_bytes;
    char *ce_uri;
    char *ce_uri_ref;
    Google__Protobuf__Timestamp *ce_timestamp;
  };
};
#define IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&io__cloudevents__v1__cloud_event__cloud_event_attribute_value__descriptor) \
    , IO__CLOUDEVENTS__V1__CLOUD_EVENT__CLOUD_EVENT_ATTRIBUTE_VALUE__ATTR__NOT_SET, {0} }


typedef enum {
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__DATA__NOT_SET = 0,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__DATA_BINARY_DATA = 6,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__DATA_TEXT_DATA = 7,
  IO__CLOUDEVENTS__V1__CLOUD_EVENT__DATA_PROTO_DATA = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IO__CLOUDEVENTS__V1__CLOUD_EVENT__DATA__CASE)
} Io__Cloudevents__V1__CloudEvent__DataCase;

struct  Io__Cloudevents__V1__CloudEvent
{
  ProtobufCMessage base;
  /*
   * Required Attributes
   */
  char *id;
  /*
   * URI-reference
   */
  char *source;
  char *spec_version;
  char *type;
  /*
   * Optional & Extension Attributes
   */
  size_t n_attributes;
  Io__Cloudevents__V1__CloudEvent__AttributesEntry **attributes;
  Io__Cloudevents__V1__CloudEvent__DataCase data_case;
  union {
    ProtobufCBinaryData binary_data;
    char *text_data;
    Google__Protobuf__Any *proto_data;
  };
};
#define IO__CLOUDEVENTS__V1__CLOUD_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&io__cloudevents__v1__cloud_event__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, IO__CLOUDEVENTS__V1__CLOUD_EVENT__DATA__NOT_SET, {0} }


struct  Io__Cloudevents__V1__CloudEventBatch
{
  ProtobufCMessage base;
  size_t n_events;
  Io__Cloudevents__V1__CloudEvent **events;
};
#define IO__CLOUDEVENTS__V1__CLOUD_EVENT_BATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&io__cloudevents__v1__cloud_event_batch__descriptor) \
    , 0,NULL }


/* Io__Cloudevents__V1__CloudEvent__AttributesEntry methods */
void   io__cloudevents__v1__cloud_event__attributes_entry__init
                     (Io__Cloudevents__V1__CloudEvent__AttributesEntry         *message);
/* Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue methods */
void   io__cloudevents__v1__cloud_event__cloud_event_attribute_value__init
                     (Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue         *message);
/* Io__Cloudevents__V1__CloudEvent methods */
void   io__cloudevents__v1__cloud_event__init
                     (Io__Cloudevents__V1__CloudEvent         *message);
size_t io__cloudevents__v1__cloud_event__get_packed_size
                     (const Io__Cloudevents__V1__CloudEvent   *message);
size_t io__cloudevents__v1__cloud_event__pack
                     (const Io__Cloudevents__V1__CloudEvent   *message,
                      uint8_t             *out);
size_t io__cloudevents__v1__cloud_event__pack_to_buffer
                     (const Io__Cloudevents__V1__CloudEvent   *message,
                      ProtobufCBuffer     *buffer);
Io__Cloudevents__V1__CloudEvent *
       io__cloudevents__v1__cloud_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   io__cloudevents__v1__cloud_event__free_unpacked
                     (Io__Cloudevents__V1__CloudEvent *message,
                      ProtobufCAllocator *allocator);
/* Io__Cloudevents__V1__CloudEventBatch methods */
void   io__cloudevents__v1__cloud_event_batch__init
                     (Io__Cloudevents__V1__CloudEventBatch         *message);
size_t io__cloudevents__v1__cloud_event_batch__get_packed_size
                     (const Io__Cloudevents__V1__CloudEventBatch   *message);
size_t io__cloudevents__v1__cloud_event_batch__pack
                     (const Io__Cloudevents__V1__CloudEventBatch   *message,
                      uint8_t             *out);
size_t io__cloudevents__v1__cloud_event_batch__pack_to_buffer
                     (const Io__Cloudevents__V1__CloudEventBatch   *message,
                      ProtobufCBuffer     *buffer);
Io__Cloudevents__V1__CloudEventBatch *
       io__cloudevents__v1__cloud_event_batch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   io__cloudevents__v1__cloud_event_batch__free_unpacked
                     (Io__Cloudevents__V1__CloudEventBatch *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Io__Cloudevents__V1__CloudEvent__AttributesEntry_Closure)
                 (const Io__Cloudevents__V1__CloudEvent__AttributesEntry *message,
                  void *closure_data);
typedef void (*Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue_Closure)
                 (const Io__Cloudevents__V1__CloudEvent__CloudEventAttributeValue *message,
                  void *closure_data);
typedef void (*Io__Cloudevents__V1__CloudEvent_Closure)
                 (const Io__Cloudevents__V1__CloudEvent *message,
                  void *closure_data);
typedef void (*Io__Cloudevents__V1__CloudEventBatch_Closure)
                 (const Io__Cloudevents__V1__CloudEventBatch *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor io__cloudevents__v1__cloud_event__descriptor;
extern const ProtobufCMessageDescriptor io__cloudevents__v1__cloud_event__attributes_entry__descriptor;
extern const ProtobufCMessageDescriptor io__cloudevents__v1__cloud_event__cloud_event_attribute_value__descriptor;
extern const ProtobufCMessageDescriptor io__cloudevents__v1__cloud_event_batch__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cloudevents_2eproto__INCLUDED */
