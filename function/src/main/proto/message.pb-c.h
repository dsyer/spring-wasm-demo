/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message.proto */

#ifndef PROTOBUF_C_message_2eproto__INCLUDED
#define PROTOBUF_C_message_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SpringMessage SpringMessage;
typedef struct _SpringMessage__HeadersEntry SpringMessage__HeadersEntry;


/* --- enums --- */


/* --- messages --- */

struct  _SpringMessage__HeadersEntry
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define SPRING_MESSAGE__HEADERS_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spring_message__headers_entry__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _SpringMessage
{
  ProtobufCMessage base;
  ProtobufCBinaryData payload;
  size_t n_headers;
  SpringMessage__HeadersEntry **headers;
};
#define SPRING_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spring_message__descriptor) \
    , {0,NULL}, 0,NULL }


/* SpringMessage__HeadersEntry methods */
void   spring_message__headers_entry__init
                     (SpringMessage__HeadersEntry         *message);
/* SpringMessage methods */
void   spring_message__init
                     (SpringMessage         *message);
size_t spring_message__get_packed_size
                     (const SpringMessage   *message);
size_t spring_message__pack
                     (const SpringMessage   *message,
                      uint8_t             *out);
size_t spring_message__pack_to_buffer
                     (const SpringMessage   *message,
                      ProtobufCBuffer     *buffer);
SpringMessage *
       spring_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spring_message__free_unpacked
                     (SpringMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SpringMessage__HeadersEntry_Closure)
                 (const SpringMessage__HeadersEntry *message,
                  void *closure_data);
typedef void (*SpringMessage_Closure)
                 (const SpringMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor spring_message__descriptor;
extern const ProtobufCMessageDescriptor spring_message__headers_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_2eproto__INCLUDED */
